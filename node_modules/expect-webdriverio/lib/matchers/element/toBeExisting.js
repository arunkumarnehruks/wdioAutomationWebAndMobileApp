import { executeCommandBe, aliasFn } from '../../utils.js';
export function toExist(received, options = {}) {
    this.expectation = this.expectation || 'exist';
    this.verb = this.verb || '';
    return executeCommandBe.call(this, received, async (el) => {
        try {
            return el.isExisting();
        }
        catch {
            return false;
        }
    }, options);
}
export function toBeExisting(el, options) {
    return aliasFn.call(this, toExist, { verb: 'be', expectation: 'existing' }, el, options);
}
export function toBePresent(el, options) {
    return aliasFn.call(this, toExist, { verb: 'be', expectation: 'present' }, el, options);
}
