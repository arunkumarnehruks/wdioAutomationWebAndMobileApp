import { waitUntil, enhanceError, compareNumbers } from '../../utils.js';
import { numberError } from '../../util/formatMessage.js';
export async function toBeRequestedTimes(received, expected = {}, options = {}) {
    const isNot = this.isNot || false;
    const { expectation = `called${typeof expected === 'number' ? ' ' + expected : ''} time${expected !== 1 ? 's' : ''}`, verb = 'be' } = this;
    const numberOptions = typeof expected === 'number'
        ? { eq: expected }
        : expected || {};
    let actual;
    const pass = await waitUntil(async () => {
        actual = received.calls.length;
        return compareNumbers(actual, numberOptions);
    }, isNot, { ...numberOptions, ...options });
    const error = numberError(numberOptions);
    const message = enhanceError('mock', error, actual, this, verb, expectation, '', numberOptions);
    return {
        pass,
        message: () => message
    };
}
